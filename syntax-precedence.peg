Program
	= Decs
Decs
	= (Dec _)*
Dec
	= VarDec
    / StateDec
    / ReactDec
ReactDec
	= ("onenter"/"always") _ Result
    / "when" _ Expr _ WhenCont
WhenCont
	= BoolOp? _ Cases
    / Result
Cases
	= Case _ (Cases)*
Case
	= "|" _ BoolOp? _ Expr _ Result
Result
	= ":" _ Stmts

VarDec
	= ("int"/"bool"/"pin"/"serial") _ VarId _ "=" _ Expr
VarId
	= [a-z][a-zA-Z]*

StateDec
	= "default"? _ "state" _ StateId _ "{" _ Decs _ "}"
StateId
	= [A-Z][a-zA-Z]*

Expr
	= Con (_ (AritOp/BoolOp/CompOp) _ Expr)?
ExprBOr
	= ExprBAnd (_ BoolAndOp _ Expr)?
AritOp
	= AritAddOp/AritMultOp/AritBitOp/AritShiftOp/AritNegOp
AritAddOp
	= [+-]
AritMultOp
	= [*%/]
AritBitOp
	= "~" / "^" / [&] ![&] / [|] ![|]
AritShiftOp
	= ">>"/"<<"
AritNegOp
	= [~]
BoolOp
	= BoolOrOp/BoolAndOp/BoolNegOp
BoolOrOp
	= "||"
BoolAndOp
	= "&&"
BoolNegOp
	= "!"
CompOp
	= "=="/"!="/">"/">="/"<"/"<="
Con
	= Num
    / "true" / "false" / "high" / "low"
    / [da] _ "@" _ Num
    / ("usb"/"pin") _ "$" _ Num
Num
	= [0-9]+("."[0-9]+)?

Stmts
	= "[" _ Stmt _ (";" _ Stmt?)* _ "]"
    / Stmt
Stmt
	= VarDec
    / VarId _ (AritOp?"=") _ Expr
    / "enter" _ StateId

_
	= [ \t\n\r]*
