Program
	= Decs
Decs
	= (Dec _)*
Dec
	= NameDec
    / StateDec
    / ReactDec
    / StructDec
ReactDec
	= ("onenter"/"always") _ Result
    / "when" _ Expr _ WhenCont
    / ("every"/"after") _ Expr _ Unit _ Result
WhenCont
	= (CompOp/BoolOp/ChangeOp)? _ Cases
    / Result
Cases
	= Case _ (Cases)*
Case
	= "|" _ (CompOp/BoolOp/ChangeOp)? _ Expr _ Result
Result
	= ":" _ Stmts
Unit
	= "µs"/"ms"/"s"/"m"/"h"/"d"

NameDec
	= Type _ NameId _ Params? _ "=" _ (Stmts/Expr)
NameId
	= [a-z][a-zA-Z]*
Params
    = "(" _ (Param _ ("," _ Param)*)? _ ")"
Param
    = Type _ NameId
Type
    = (("u"?"int"("8"/"16"/"32"))/"bool"/"float"/"pin"/"serial"/"proc"/"string"/"char") _ "[]"?

StateDec
	= "default"? _ "state" _ StateId _ "{" _ Decs _ "}"
StateId
	= [A-Z][a-zA-Z]*

StructDec
	= "struct" _ NameId _ "{" _ (NameDec _)* _ "}"

Stmts
	= "[" _ Stmt _ (";" _ Stmt?)* _ "]"
    / Stmt
Stmt
	= NameDec
    / Expr _ ((AritOp/BitOp)?"=") _ Expr
    / "enter" _ StateId
    / "run" _ Expr

Expr
	= ExprBOr //Con (_ (AritOp/BoolOp/CompOp) _ Expr)?
ExprBOr
	= ExprBAnd (_ BoolOrOp _ Expr)?
ExprBAnd
	= ExprBXor (_ BoolAndOp _ Expr)?
ExprBXor
	= ExprComp (_ BoolXorOp _ Expr)?
ExprComp
	= ExprMult (_ (CompOp/ChangeOp) _ Expr)?
ExprMult
	= ExprAdd (_ (AritMultOp/BitAndOp/BitXorOp) _ Expr)?
ExprAdd
	= ExprNeg (_ (AritAddOp/BitOrOp) _ Expr)?
ExprNeg
	= (BoolNegOp/BitNegOp/AritNegOp)? _ ExprOld
ExprOld
    = (OldOp)? _ ExprSub
ExprSub
	= ExprCall (_ "." _ Expr)?
ExprCall
	= ExprDeref _ ("(" _ (Expr _ ("," _ Expr)*)? _ ")")?
ExprDeref
	= DerefOp? ExprParen
ExprParen
    = "(" _ Expr _ ")"
    / Con

AritOp
	= AritAddOp/AritMultOp
AritAddOp
	= [+-]
AritMultOp
	= [*%/]
AritNegOp
	= [+-]
BitOp
	= BitNegOp/BitAndOp/BitOrOp/BitXorOp/BitShiftOp
BitNegOp
	= "~"
BitAndOp
	= [&] ![&]
BitOrOp
	= [|] ![|]
BitXorOp
	= "^" !"^"
BitShiftOp
	= ">>"/"<<"
BoolOp
	= BoolOrOp/BoolAndOp/BoolXorOp/BoolNegOp
BoolOrOp
	= "||"
BoolAndOp
	= "&&"
BoolXorOp
    = "^^"
BoolNegOp
	= "!"
CompOp
	= [<>][=]? / [=!][=]
ChangeOp
	= "->"/"!>"
OldOp
	= "§"
DerefOp
	= "*"
Con
    = "[" _ Con _ ("," _ Con)* _ ","? _ "]"
    / "0b"[01]+("."[01]+)?
    / "0o"[0-7]+("."[0-7]+)?
    / "0"[xh][0-9a-fA-F]+("."[0-9a-fA-F]+)?
	/ "0d"?[0-9]+("."[0-9]+)?
    / "true" / "false" / "high" / "low"
    / ("o""utput"? / "i""nput"? ("-"? "p" "ullup"?)?) _ "@" _ "A"?[0-9]+
    / ("usb"/"pin") _ "$" _ [0-9]+
    / NameId
    / "\"" [^"]* "\""

_
	= $[ \t\n\r]+ _ 
    / [/][/] [^\n]* [\n] _ 
    / [#] [^\n]* [\n] _ 
    / [/][*] ([^*]+![/])* [*][/] _ / ""
